{
    "functionbodies": {
        "AiAOVIteratorDestroy": "AiAOVIteratorDestroy(f2aiter);", 
        "AiAOVIteratorFinished": "bool f2a_result = AiAOVIteratorFinished(f2aiter);", 
        "AiAOVIteratorGetNext": "const AtAOVEntry * f2a_result = AiAOVIteratorGetNext(f2aiter);", 
        "AiASSLoad": "int f2a_result = AiASSLoad(f2afilename, f2amask/*=AI_NODE_ALL*/);", 
        "AiASSWrite": "int f2a_result = AiASSWrite(f2afilename, f2amask/*=AI_NODE_ALL*/, f2aopen_procs/*=false*/, f2abinary/*=true*/);", 
        "AiBegin": "AiBegin();", 
        "AiCameraDestroy": "AiCameraDestroy(f2anode);", 
        "AiCameraGetLocalData": "void * f2a_result = AiCameraGetLocalData(f2anode);", 
        "AiCameraInitialize": "AiCameraInitialize(f2anode, f2adata);", 
        "AiCameraUpdate": "AiCameraUpdate(f2anode, f2aplane_distance);", 
        "AiEnd": "AiEnd();", 
        "AiEnumGetString": "const char * f2a_result = AiEnumGetString(f2aenum_type, f2aindex);", 
        "AiEnumGetValue": "int f2a_result = AiEnumGetValue(f2aenum_type, f2astring);", 
        "AiLicenseGetAttemptDelay": "unsigned int f2a_result = AiLicenseGetAttemptDelay();", 
        "AiLicenseGetAttempts": "unsigned int f2a_result = AiLicenseGetAttempts();", 
        "AiLicenseGetInfo": "int f2a_result = AiLicenseGetInfo(f2alicenses, f2an);", 
        "AiLicenseGetServer": "bool f2a_result = AiLicenseGetServer(f2ahost, f2aport);", 
        "AiLicenseSetAttemptDelay": "AiLicenseSetAttemptDelay(f2amsecs);", 
        "AiLicenseSetAttempts": "AiLicenseSetAttempts(f2aattempts);", 
        "AiLicenseSetServer": "bool f2a_result = AiLicenseSetServer(f2ahost, f2aport);", 
        "AiLoadPlugin": "AiLoadPlugin(f2apath);", 
        "AiLoadPlugins": "AiLoadPlugins(f2adirectory);", 
        "AiMakeRay": "AiMakeRay(f2aray, f2atype, f2aorigin, f2adir, f2amaxdist, f2asg);", 
        "AiMetaDataGetBoolAtString": "bool f2a_result = AiMetaDataGetBoolAtString(f2aentry, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataGetFltAtString": "bool f2a_result = AiMetaDataGetFltAtString(f2aentry, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataGetIntAtString": "bool f2a_result = AiMetaDataGetIntAtString(f2aentry, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataGetPnt2AtString": "bool f2a_result = AiMetaDataGetPnt2AtString(f2aentry, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataGetPntAtString": "bool f2a_result = AiMetaDataGetPntAtString(f2aentry, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataGetRGBAtString": "bool f2a_result = AiMetaDataGetRGBAtString(f2aentry, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataGetStrAtString": "bool f2a_result = AiMetaDataGetStrAtString(f2aentry, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataGetVecAtString": "bool f2a_result = AiMetaDataGetVecAtString(f2aentry, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataIteratorDestroy": "AiMetaDataIteratorDestroy(f2aiter);", 
        "AiMetaDataIteratorFinished": "bool f2a_result = AiMetaDataIteratorFinished(f2aiter);", 
        "AiMetaDataIteratorGetNext": "const AtMetaDataEntry * f2a_result = AiMetaDataIteratorGetNext(f2aiter);", 
        "AiMetaDataLoadFile": "bool f2a_result = AiMetaDataLoadFile(f2afilename);", 
        "AiMetaDataSetBool": "AiMetaDataSetBool(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetBoolAtString": "AiMetaDataSetBoolAtString(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetFlt": "AiMetaDataSetFlt(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetFltAtString": "AiMetaDataSetFltAtString(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetInt": "AiMetaDataSetInt(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetIntAtString": "AiMetaDataSetIntAtString(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetPnt": "AiMetaDataSetPnt(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetPnt2": "AiMetaDataSetPnt2(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetPnt2AtString": "AiMetaDataSetPnt2AtString(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetPntAtString": "AiMetaDataSetPntAtString(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetRGB": "AiMetaDataSetRGB(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetRGBAtString": "AiMetaDataSetRGBAtString(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetStr": "AiMetaDataSetStr(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetStrAtString": "AiMetaDataSetStrAtString(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetVec": "AiMetaDataSetVec(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMetaDataSetVecAtString": "AiMetaDataSetVecAtString(f2amds, f2aparam, f2aname, f2avalue);", 
        "AiMsgDebug": "AiMsgDebug(f2aformat);", 
        "AiMsgError": "AiMsgError(f2aformat);", 
        "AiMsgFatal": "AiMsgFatal(f2aformat);", 
        "AiMsgInfo": "AiMsgInfo(f2aformat);", 
        "AiMsgResetCallback": "AiMsgResetCallback();", 
        "AiMsgSetConsoleFlags": "AiMsgSetConsoleFlags(f2aflags);", 
        "AiMsgSetLogFileFlags": "AiMsgSetLogFileFlags(f2aflags);", 
        "AiMsgSetLogFileName": "AiMsgSetLogFileName(f2afilename);", 
        "AiMsgSetMaxWarnings": "AiMsgSetMaxWarnings(f2amax_warnings);", 
        "AiMsgTab": "AiMsgTab(f2atabinc);", 
        "AiMsgUtilGetElapsedTime": "AtUInt32 f2a_result = AiMsgUtilGetElapsedTime();", 
        "AiMsgUtilGetUsedMemory": "AtUInt64 f2a_result = AiMsgUtilGetUsedMemory();", 
        "AiMsgWarning": "AiMsgWarning(f2aformat);", 
        "AiNodeAtString": "AtNode * f2a_result = AiNodeAtString(f2aname);", 
        "AiNodeClone": "AtNode * f2a_result = AiNodeClone(f2anode);", 
        "AiNodeDeclareAtString": "bool f2a_result = AiNodeDeclareAtString(f2anode, f2aparam, f2adeclaration);", 
        "AiNodeDestroy": "bool f2a_result = AiNodeDestroy(f2anode);", 
        "AiNodeEntryGetCount": "int f2a_result = AiNodeEntryGetCount(f2anentry);", 
        "AiNodeEntryGetFilename": "const char * f2a_result = AiNodeEntryGetFilename(f2anentry);", 
        "AiNodeEntryGetMetaDataIterator": "AtMetaDataIterator * f2a_result = AiNodeEntryGetMetaDataIterator(f2anentry, f2aparam/*=NULL*/);", 
        "AiNodeEntryGetName": "const char * f2a_result = AiNodeEntryGetName(f2anentry);", 
        "AiNodeEntryGetNumParams": "int f2a_result = AiNodeEntryGetNumParams(f2anentry);", 
        "AiNodeEntryGetOutputType": "int f2a_result = AiNodeEntryGetOutputType(f2anentry);", 
        "AiNodeEntryGetParamIterator": "AtParamIterator * f2a_result = AiNodeEntryGetParamIterator(f2anentry);", 
        "AiNodeEntryGetParameter": "const AtParamEntry * f2a_result = AiNodeEntryGetParameter(f2anentry, f2ai);", 
        "AiNodeEntryGetType": "int f2a_result = AiNodeEntryGetType(f2anentry);", 
        "AiNodeEntryGetTypeName": "const char * f2a_result = AiNodeEntryGetTypeName(f2anentry);", 
        "AiNodeEntryGetVersion": "const char * f2a_result = AiNodeEntryGetVersion(f2anentry);", 
        "AiNodeEntryInstall": "AiNodeEntryInstall(f2atype, f2aoutput_type, f2aname, f2afilename, f2amethods, f2aversion);", 
        "AiNodeEntryIteratorDestroy": "AiNodeEntryIteratorDestroy(f2aiter);", 
        "AiNodeEntryIteratorFinished": "bool f2a_result = AiNodeEntryIteratorFinished(f2aiter);", 
        "AiNodeEntryIteratorGetNext": "AtNodeEntry * f2a_result = AiNodeEntryIteratorGetNext(f2aiter);", 
        "AiNodeEntryLookUpAtString": "const AtNodeEntry * f2a_result = AiNodeEntryLookUpAtString(f2aname);", 
        "AiNodeEntryLookUpParameterAtString": "const AtParamEntry * f2a_result = AiNodeEntryLookUpParameterAtString(f2anentry, f2aparam);", 
        "AiNodeEntryUninstall": "AiNodeEntryUninstall(f2aname);", 
        "AiNodeGetArrayAtString": "AtArray * f2a_result = AiNodeGetArrayAtString(f2anode, f2aparam);", 
        "AiNodeGetBoolAtString": "bool f2a_result = AiNodeGetBoolAtString(f2anode, f2aparam);", 
        "AiNodeGetByteAtString": "AtByte f2a_result = AiNodeGetByteAtString(f2anode, f2aparam);", 
        "AiNodeGetFltAtString": "float f2a_result = AiNodeGetFltAtString(f2anode, f2aparam);", 
        "AiNodeGetIntAtString": "int f2a_result = AiNodeGetIntAtString(f2anode, f2aparam);", 
        "AiNodeGetLink": "AtNode * f2a_result = AiNodeGetLink(f2anode, f2ainput, f2acomp/*=NULL*/);", 
        "AiNodeGetLocalData": "void * f2a_result = AiNodeGetLocalData(f2anode);", 
        "AiNodeGetMatrixAtString": "AiNodeGetMatrixAtString(f2anode, f2aparam, f2amatrix);", 
        "AiNodeGetName": "const char * f2a_result = AiNodeGetName(f2anode);", 
        "AiNodeGetNodeEntry": "const AtNodeEntry * f2a_result = AiNodeGetNodeEntry(f2anode);", 
        "AiNodeGetParams": "AtParamValue * f2a_result = AiNodeGetParams(f2anode);", 
        "AiNodeGetPnt2AtString": "AtPoint2 f2a_result = AiNodeGetPnt2AtString(f2anode, f2aparam);", 
        "AiNodeGetPntAtString": "AtPoint f2a_result = AiNodeGetPntAtString(f2anode, f2aparam);", 
        "AiNodeGetPtrAtString": "void * f2a_result = AiNodeGetPtrAtString(f2anode, f2aparam);", 
        "AiNodeGetRGBAAtString": "AtRGBA f2a_result = AiNodeGetRGBAAtString(f2anode, f2aparam);", 
        "AiNodeGetRGBAtString": "AtRGB f2a_result = AiNodeGetRGBAtString(f2anode, f2aparam);", 
        "AiNodeGetStrAtString": "AtString f2a_result = AiNodeGetStrAtString(f2anode, f2aparam);", 
        "AiNodeGetUIntAtString": "unsigned int f2a_result = AiNodeGetUIntAtString(f2anode, f2aparam);", 
        "AiNodeGetUserParamIterator": "AtUserParamIterator * f2a_result = AiNodeGetUserParamIterator(f2anode);", 
        "AiNodeGetVecAtString": "AtVector f2a_result = AiNodeGetVecAtString(f2anode, f2aparam);", 
        "AiNodeIs": "bool f2a_result = AiNodeIs(f2anode, f2astr);", 
        "AiNodeIsDisabled": "bool f2a_result = AiNodeIsDisabled(f2anode);", 
        "AiNodeIsLinked": "bool f2a_result = AiNodeIsLinked(f2anode, f2ainput);", 
        "AiNodeIteratorDestroy": "AiNodeIteratorDestroy(f2aiter);", 
        "AiNodeIteratorFinished": "bool f2a_result = AiNodeIteratorFinished(f2aiter);", 
        "AiNodeIteratorGetNext": "AtNode * f2a_result = AiNodeIteratorGetNext(f2aiter);", 
        "AiNodeLink": "bool f2a_result = AiNodeLink(f2asrc, f2ainput, f2atarget);", 
        "AiNodeLinkOutput": "bool f2a_result = AiNodeLinkOutput(f2asrc, f2aoutput, f2atarget, f2ainput);", 
        "AiNodeLookUpByNameAtString": "AtNode * f2a_result = AiNodeLookUpByNameAtString(f2aname);", 
        "AiNodeLookUpUserParameterAtString": "const AtUserParamEntry * f2a_result = AiNodeLookUpUserParameterAtString(f2anode, f2aparam);", 
        "AiNodeParamArray": "AiNodeParamArray(f2aparams, f2avaroffset, f2apname, f2apdefault);", 
        "AiNodeParamBool": "AiNodeParamBool(f2aparams, f2avaroffset, f2apname, f2apdefault);", 
        "AiNodeParamByte": "AiNodeParamByte(f2aparams, f2avaroffset, f2apname, f2apdefault);", 
        "AiNodeParamEnum": "AiNodeParamEnum(f2aparams, f2avaroffset, f2apname, f2apdefault, f2aenum_type);", 
        "AiNodeParamFlt": "AiNodeParamFlt(f2aparams, f2avaroffset, f2apname, f2apdefault);", 
        "AiNodeParamInt": "AiNodeParamInt(f2aparams, f2avaroffset, f2apname, f2apdefault);", 
        "AiNodeParamMtx": "AiNodeParamMtx(f2aparams, f2avaroffset, f2apname, f2amatrix);", 
        "AiNodeParamNode": "AiNodeParamNode(f2aparams, f2avaroffset, f2apname, f2apdefault);", 
        "AiNodeParamPnt": "AiNodeParamPnt(f2aparams, f2avaroffset, f2apname, f2ax, f2ay, f2az);", 
        "AiNodeParamPnt2": "AiNodeParamPnt2(f2aparams, f2avaroffset, f2apname, f2ax, f2ay);", 
        "AiNodeParamPtr": "AiNodeParamPtr(f2aparams, f2avaroffset, f2apname, f2apdefault);", 
        "AiNodeParamRGB": "AiNodeParamRGB(f2aparams, f2avaroffset, f2apname, f2ar, f2ag, f2ab);", 
        "AiNodeParamRGBA": "AiNodeParamRGBA(f2aparams, f2avaroffset, f2apname, f2ar, f2ag, f2ab, f2aa);", 
        "AiNodeParamStr": "AiNodeParamStr(f2aparams, f2avaroffset, f2apname, f2apdefault);", 
        "AiNodeParamUInt": "AiNodeParamUInt(f2aparams, f2avaroffset, f2apname, f2apdefault);", 
        "AiNodeParamVec": "AiNodeParamVec(f2aparams, f2avaroffset, f2apname, f2ax, f2ay, f2az);", 
        "AiNodeReset": "AiNodeReset(f2anode);", 
        "AiNodeResetParameter": "AiNodeResetParameter(f2anode, f2aparam);", 
        "AiNodeSetArrayAtString": "AiNodeSetArrayAtString(f2anode, f2aparam, f2aval);", 
        "AiNodeSetAttributes": "AiNodeSetAttributes(f2anode, f2aattributes);", 
        "AiNodeSetBoolAtString": "AiNodeSetBoolAtString(f2anode, f2aparam, f2aval);", 
        "AiNodeSetByteAtString": "AiNodeSetByteAtString(f2anode, f2aparam, f2aval);", 
        "AiNodeSetDisabled": "AiNodeSetDisabled(f2anode, f2adisabled);", 
        "AiNodeSetFltAtString": "AiNodeSetFltAtString(f2anode, f2aparam, f2aval);", 
        "AiNodeSetIntAtString": "AiNodeSetIntAtString(f2anode, f2aparam, f2aval);", 
        "AiNodeSetLocalData": "AiNodeSetLocalData(f2anode, f2adata);", 
        "AiNodeSetMatrixAtString": "AiNodeSetMatrixAtString(f2anode, f2aparam, f2aval);", 
        "AiNodeSetPnt2AtString": "AiNodeSetPnt2AtString(f2anode, f2aparam, f2ax, f2ay);", 
        "AiNodeSetPntAtString": "AiNodeSetPntAtString(f2anode, f2aparam, f2ax, f2ay, f2az);", 
        "AiNodeSetPtrAtString": "AiNodeSetPtrAtString(f2anode, f2aparam, f2aval);", 
        "AiNodeSetRGBAAtString": "AiNodeSetRGBAAtString(f2anode, f2aparam, f2ar, f2ag, f2ab, f2aa);", 
        "AiNodeSetRGBAtString": "AiNodeSetRGBAtString(f2anode, f2aparam, f2ar, f2ag, f2ab);", 
        "AiNodeSetStrAtString": "AiNodeSetStrAtString(f2anode, f2aparam, f2astr);", 
        "AiNodeSetUIntAtString": "AiNodeSetUIntAtString(f2anode, f2aparam, f2aval);", 
        "AiNodeSetVecAtString": "AiNodeSetVecAtString(f2anode, f2aparam, f2ax, f2ay, f2az);", 
        "AiNodeUnlink": "bool f2a_result = AiNodeUnlink(f2anode, f2ainput);", 
        "AiParamGetDefault": "const AtParamValue * f2a_result = AiParamGetDefault(f2apentry);", 
        "AiParamGetEnum": "AtEnum f2a_result = AiParamGetEnum(f2apentry);", 
        "AiParamGetName": "const char * f2a_result = AiParamGetName(f2apentry);", 
        "AiParamGetType": "int f2a_result = AiParamGetType(f2apentry);", 
        "AiParamGetTypeName": "const char * f2a_result = AiParamGetTypeName(f2atype);", 
        "AiParamGetTypeSize": "AI_CONST int f2a_result = AiParamGetTypeSize(f2atype);", 
        "AiParamIteratorDestroy": "AiParamIteratorDestroy(f2aiter);", 
        "AiParamIteratorFinished": "bool f2a_result = AiParamIteratorFinished(f2aiter);", 
        "AiParamIteratorGetNext": "const AtParamEntry * f2a_result = AiParamIteratorGetNext(f2aiter);", 
        "AiReflectRay": "AiReflectRay(f2aray, f2anormal, f2asg);", 
        "AiRefractRay": "bool f2a_result = AiRefractRay(f2aray, f2anormal, f2an1, f2an2, f2asg);", 
        "AiRender": "int f2a_result = AiRender(f2amode/*=AI_RENDER_MODE_CAMERA*/);", 
        "AiRenderAbort": "AiRenderAbort();", 
        "AiRenderInterrupt": "AiRenderInterrupt();", 
        "AiRendering": "bool f2a_result = AiRendering();", 
        "AiTextureAccess": "AtRGBA f2a_result = AiTextureAccess(f2asg, f2afilename, f2aparams, f2asuccess/*=NULL*/);", 
        "AiTextureGetBitDepth": "bool f2a_result = AiTextureGetBitDepth(f2afilename, f2abit_depth);", 
        "AiTextureGetChannelName": "const char * f2a_result = AiTextureGetChannelName(f2afilename, f2achannel_index);", 
        "AiTextureGetFormat": "bool f2a_result = AiTextureGetFormat(f2afilename, f2aformat);", 
        "AiTextureGetMatrices": "bool f2a_result = AiTextureGetMatrices(f2afilename, f2aworld_to_screen, f2aworld_to_camera);", 
        "AiTextureGetNumChannels": "bool f2a_result = AiTextureGetNumChannels(f2afilename, f2anum_channels);", 
        "AiTextureGetResolution": "bool f2a_result = AiTextureGetResolution(f2afilename, f2awidth, f2aheight);", 
        "AiTextureHandleAccess": "AtRGBA f2a_result = AiTextureHandleAccess(f2asg, f2ahandle, f2aparams, f2asuccess/*=NULL*/);", 
        "AiTextureHandleCreate": "AtTextureHandle * f2a_result = AiTextureHandleCreate(f2afilename);", 
        "AiTextureHandleDestroy": "AiTextureHandleDestroy(f2ahandle);", 
        "AiTextureInvalidate": "AiTextureInvalidate(f2afilename);", 
        "AiTextureParamsSetDefaults": "AiTextureParamsSetDefaults(f2aparams);", 
        "AiTrace": "bool f2a_result = AiTrace(f2aray, f2asample);", 
        "AiTraceBackground": "AiTraceBackground(f2aray, f2asample);", 
        "AiTraceProbe": "bool f2a_result = AiTraceProbe(f2aray, f2asgout);", 
        "AiUniverseCacheFlush": "bool f2a_result = AiUniverseCacheFlush(f2acache_flags);", 
        "AiUniverseGetAOVIterator": "AtAOVIterator * f2a_result = AiUniverseGetAOVIterator();", 
        "AiUniverseGetCamera": "AtNode * f2a_result = AiUniverseGetCamera();", 
        "AiUniverseGetNodeEntryIterator": "AtNodeEntryIterator * f2a_result = AiUniverseGetNodeEntryIterator(f2anode_mask);", 
        "AiUniverseGetNodeIterator": "AtNodeIterator * f2a_result = AiUniverseGetNodeIterator(f2anode_mask);", 
        "AiUniverseGetOptions": "AtNode * f2a_result = AiUniverseGetOptions();", 
        "AiUniverseGetSceneBounds": "AtBBox f2a_result = AiUniverseGetSceneBounds();", 
        "AiUniverseIsActive": "bool f2a_result = AiUniverseIsActive();", 
        "AiUserParamGetArrayType": "int f2a_result = AiUserParamGetArrayType(f2aupentry);", 
        "AiUserParamGetCategory": "int f2a_result = AiUserParamGetCategory(f2aupentry);", 
        "AiUserParamGetIndex": "AI_CONST int f2a_result = AiUserParamGetIndex(f2aupentry);", 
        "AiUserParamGetName": "const char * f2a_result = AiUserParamGetName(f2aupentry);", 
        "AiUserParamGetType": "int f2a_result = AiUserParamGetType(f2aupentry);", 
        "AiUserParamIteratorDestroy": "AiUserParamIteratorDestroy(f2aiter);", 
        "AiUserParamIteratorFinished": "bool f2a_result = AiUserParamIteratorFinished(f2aiter);", 
        "AiUserParamIteratorGetNext": "const AtUserParamEntry * f2a_result = AiUserParamIteratorGetNext(f2aiter);"
    }, 
    "functionentry": "F2A_TRY_STATEMENT", 
    "functionexit": "F2A_CATCH_STATEMENT", 
    "functionexitreturn": "F2A_CATCH_STATEMENT_RETURN", 
    "header": "#include \"ai.h\"", 
    "parameterconversionstoskip": [], 
    "parameterprefix": "f2a", 
    "typemapping": {
        "Boolean": {
            "ctype": "bool", 
            "from": "Boolean_to_bool", 
            "methodop": ".", 
            "to": "bool_to_Boolean"
        }, 
        "Box3": {
            "ctype": "AtBBox", 
            "from": "Box3_to_AtBBox", 
            "methodop": ".", 
            "to": "AtBBox_to_Box3"
        }, 
        "Color": {
            "ctype": "AtRGBA", 
            "from": "Color_to_AtRGBA", 
            "methodop": ".", 
            "to": "AtRGBA_to_Color"
        }, 
        "Data": {
            "ctype": "AtList", 
            "from": "Data_to_AtList", 
            "methodop": ".", 
            "to": "AtList_to_Data"
        }, 
        "Float32": {
            "ctype": "float", 
            "from": "Float32_to_float", 
            "methodop": ".", 
            "to": "float_to_Float32"
        }, 
        "Float64": {
            "ctype": "double", 
            "from": "Float64_to_double", 
            "methodop": ".", 
            "to": "double_to_Float64"
        }, 
        "Mat44": {
            "ctype": "AtMatrix", 
            "from": "Mat44_to_AtMatrix", 
            "methodop": ".", 
            "to": "AtMatrix_to_Mat44"
        }, 
        "RGB": {
            "ctype": "AtRGB", 
            "from": "RGB_to_AtRGB", 
            "methodop": ".", 
            "to": "AtRGB_to_RGB"
        }, 
        "SInt32": {
            "ctype": "int", 
            "from": "SInt32_to_int", 
            "methodop": ".", 
            "to": "int_to_SInt32"
        }, 
        "SInt64": {
            "ctype": "long long", 
            "from": "SInt64_to_long long", 
            "methodop": ".", 
            "to": "long long_to_SInt64"
        }, 
        "String": {
            "ctype": "char*", 
            "from": "String_to_char", 
            "methodop": "->", 
            "to": "char_to_String"
        }, 
        "String[]": {
            "ctype": "AtEnum", 
            "from": "String[]_to_AtEnum", 
            "methodop": ".", 
            "to": "AtEnum_to_String[]"
        }, 
        "UInt16": {
            "ctype": "AtUInt16", 
            "from": "UInt16_to_AtUInt16", 
            "methodop": ".", 
            "to": "AtUInt16_to_UInt16"
        }, 
        "UInt32": {
            "ctype": "AtUInt32", 
            "from": "UInt32_to_AtUInt32", 
            "methodop": ".", 
            "to": "AtUInt32_to_UInt32"
        }, 
        "UInt64": {
            "ctype": "AtUInt64", 
            "from": "UInt64_to_AtUInt64", 
            "methodop": ".", 
            "to": "AtUInt64_to_UInt64"
        }, 
        "UInt8": {
            "ctype": "AtByte", 
            "from": "UInt8_to_AtByte", 
            "methodop": ".", 
            "to": "AtByte_to_UInt8"
        }, 
        "Vec2": {
            "ctype": "AtPoint2", 
            "from": "Vec2_to_AtPoint2", 
            "methodop": ".", 
            "to": "AtPoint2_to_Vec2"
        }, 
        "Vec3": {
            "ctype": "AtPoint", 
            "from": "Vec3_to_AtPoint", 
            "methodop": ".", 
            "to": "AtPoint_to_Vec3"
        }
    }
}