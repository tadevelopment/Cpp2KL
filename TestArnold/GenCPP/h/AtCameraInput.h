#ifndef __KL2EDK_AUTOGEN_AtCameraInput__
#define __KL2EDK_AUTOGEN_AtCameraInput__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'AtCameraInput.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.1.0-alpha
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 1
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"

namespace Fabric { namespace EDK { namespace KL {

// KL struct 'AtCameraInput'
// Defined at GenKL\\ai_cameras.kl:10:1

struct AtCameraInput
{
  typedef AtCameraInput &Result;
  typedef AtCameraInput const &INParam;
  typedef AtCameraInput &IOParam;
  typedef AtCameraInput &OUTParam;
  
  Float32 sx;
  Float32 sy;
  Float32 dsx;
  Float32 dsy;
  Float32 lensx;
  Float32 lensy;
  Float32 relative_time;
};

inline void Traits<AtCameraInput>::ConstructEmpty( AtCameraInput &val )
{
  Traits< Float32 >::ConstructEmpty( val.sx );
  Traits< Float32 >::ConstructEmpty( val.sy );
  Traits< Float32 >::ConstructEmpty( val.dsx );
  Traits< Float32 >::ConstructEmpty( val.dsy );
  Traits< Float32 >::ConstructEmpty( val.lensx );
  Traits< Float32 >::ConstructEmpty( val.lensy );
  Traits< Float32 >::ConstructEmpty( val.relative_time );
}
inline void Traits<AtCameraInput>::ConstructCopy( AtCameraInput &lhs, AtCameraInput const &rhs )
{
  Traits< Float32 >::ConstructCopy( lhs.sx, rhs.sx );
  Traits< Float32 >::ConstructCopy( lhs.sy, rhs.sy );
  Traits< Float32 >::ConstructCopy( lhs.dsx, rhs.dsx );
  Traits< Float32 >::ConstructCopy( lhs.dsy, rhs.dsy );
  Traits< Float32 >::ConstructCopy( lhs.lensx, rhs.lensx );
  Traits< Float32 >::ConstructCopy( lhs.lensy, rhs.lensy );
  Traits< Float32 >::ConstructCopy( lhs.relative_time, rhs.relative_time );
}
inline void Traits<AtCameraInput>::AssignCopy( AtCameraInput &lhs, AtCameraInput const &rhs )
{
  Traits< Float32 >::AssignCopy( lhs.sx, rhs.sx );
  Traits< Float32 >::AssignCopy( lhs.sy, rhs.sy );
  Traits< Float32 >::AssignCopy( lhs.dsx, rhs.dsx );
  Traits< Float32 >::AssignCopy( lhs.dsy, rhs.dsy );
  Traits< Float32 >::AssignCopy( lhs.lensx, rhs.lensx );
  Traits< Float32 >::AssignCopy( lhs.lensy, rhs.lensy );
  Traits< Float32 >::AssignCopy( lhs.relative_time, rhs.relative_time );
}
inline void Traits<AtCameraInput>::Destruct( AtCameraInput &val )
{
  Traits< Float32 >::Destruct( val.relative_time );
  Traits< Float32 >::Destruct( val.lensy );
  Traits< Float32 >::Destruct( val.lensx );
  Traits< Float32 >::Destruct( val.dsy );
  Traits< Float32 >::Destruct( val.dsx );
  Traits< Float32 >::Destruct( val.sy );
  Traits< Float32 >::Destruct( val.sx );
}
}}}

#endif // __KL2EDK_AUTOGEN_AtCameraInput__
