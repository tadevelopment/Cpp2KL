#ifndef __KL2EDK_AUTOGEN_AtShaderGlobals__
#define __KL2EDK_AUTOGEN_AtShaderGlobals__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'AtShaderGlobals.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.1.0-alpha
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 1
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"

namespace Fabric { namespace EDK { namespace KL {

// KL struct 'AtShaderGlobals'
// Defined at GenKL\\ai_ray.kl:8:1

struct AtShaderGlobals
{
  typedef AtShaderGlobals &Result;
  typedef AtShaderGlobals const &INParam;
  typedef AtShaderGlobals &IOParam;
  typedef AtShaderGlobals &OUTParam;
  
  Data handle;
};

inline void Traits<AtShaderGlobals>::ConstructEmpty( AtShaderGlobals &val )
{
  Traits< Data >::ConstructEmpty( val.handle );
}
inline void Traits<AtShaderGlobals>::ConstructCopy( AtShaderGlobals &lhs, AtShaderGlobals const &rhs )
{
  Traits< Data >::ConstructCopy( lhs.handle, rhs.handle );
}
inline void Traits<AtShaderGlobals>::AssignCopy( AtShaderGlobals &lhs, AtShaderGlobals const &rhs )
{
  Traits< Data >::AssignCopy( lhs.handle, rhs.handle );
}
inline void Traits<AtShaderGlobals>::Destruct( AtShaderGlobals &val )
{
  Traits< Data >::Destruct( val.handle );
}
}}}

#endif // __KL2EDK_AUTOGEN_AtShaderGlobals__
