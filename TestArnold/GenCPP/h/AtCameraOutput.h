#ifndef __KL2EDK_AUTOGEN_AtCameraOutput__
#define __KL2EDK_AUTOGEN_AtCameraOutput__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'AtCameraOutput.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.1.0-alpha
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 1
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"
#include "Vec3.h"

namespace Fabric { namespace EDK { namespace KL {

// KL struct 'AtCameraOutput'
// Defined at E:\dev\OpusTech\Cpp2KL\TestArnold\GenKL/\ai_cameras.kl:27:1

struct AtCameraOutput
{
  typedef AtCameraOutput &Result;
  typedef AtCameraOutput const &INParam;
  typedef AtCameraOutput &IOParam;
  typedef AtCameraOutput &OUTParam;
  
  Vec3 origin;
  Vec3 dir;
  Vec3 dOdx;
  Vec3 dOdy;
  Vec3 dDdx;
  Vec3 dDdy;
  Float32 weight;
};

inline void Traits<AtCameraOutput>::ConstructEmpty( AtCameraOutput &val )
{
  Traits< Vec3 >::ConstructEmpty( val.origin );
  Traits< Vec3 >::ConstructEmpty( val.dir );
  Traits< Vec3 >::ConstructEmpty( val.dOdx );
  Traits< Vec3 >::ConstructEmpty( val.dOdy );
  Traits< Vec3 >::ConstructEmpty( val.dDdx );
  Traits< Vec3 >::ConstructEmpty( val.dDdy );
  Traits< Float32 >::ConstructEmpty( val.weight );
}
inline void Traits<AtCameraOutput>::ConstructCopy( AtCameraOutput &lhs, AtCameraOutput const &rhs )
{
  Traits< Vec3 >::ConstructCopy( lhs.origin, rhs.origin );
  Traits< Vec3 >::ConstructCopy( lhs.dir, rhs.dir );
  Traits< Vec3 >::ConstructCopy( lhs.dOdx, rhs.dOdx );
  Traits< Vec3 >::ConstructCopy( lhs.dOdy, rhs.dOdy );
  Traits< Vec3 >::ConstructCopy( lhs.dDdx, rhs.dDdx );
  Traits< Vec3 >::ConstructCopy( lhs.dDdy, rhs.dDdy );
  Traits< Float32 >::ConstructCopy( lhs.weight, rhs.weight );
}
inline void Traits<AtCameraOutput>::AssignCopy( AtCameraOutput &lhs, AtCameraOutput const &rhs )
{
  Traits< Vec3 >::AssignCopy( lhs.origin, rhs.origin );
  Traits< Vec3 >::AssignCopy( lhs.dir, rhs.dir );
  Traits< Vec3 >::AssignCopy( lhs.dOdx, rhs.dOdx );
  Traits< Vec3 >::AssignCopy( lhs.dOdy, rhs.dOdy );
  Traits< Vec3 >::AssignCopy( lhs.dDdx, rhs.dDdx );
  Traits< Vec3 >::AssignCopy( lhs.dDdy, rhs.dDdy );
  Traits< Float32 >::AssignCopy( lhs.weight, rhs.weight );
}
inline void Traits<AtCameraOutput>::Destruct( AtCameraOutput &val )
{
  Traits< Float32 >::Destruct( val.weight );
  Traits< Vec3 >::Destruct( val.dDdy );
  Traits< Vec3 >::Destruct( val.dDdx );
  Traits< Vec3 >::Destruct( val.dOdy );
  Traits< Vec3 >::Destruct( val.dOdx );
  Traits< Vec3 >::Destruct( val.dir );
  Traits< Vec3 >::Destruct( val.origin );
}
}}}

#endif // __KL2EDK_AUTOGEN_AtCameraOutput__
