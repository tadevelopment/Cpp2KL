#ifndef __KL2EDK_AUTOGEN_RotationOrder__
#define __KL2EDK_AUTOGEN_RotationOrder__

#ifdef KL2EDK_INCLUDE_MESSAGES
  #pragma message ( "Including 'RotationOrder.h'" )
#endif

////////////////////////////////////////////////////////////////
// THIS FILE IS AUTOMATICALLY GENERATED -- DO NOT MODIFY!!
////////////////////////////////////////////////////////////////
// Generated by kl2edk version 2.1.0-alpha
////////////////////////////////////////////////////////////////

#include <FabricEDK.h>
#if FABRIC_EDK_VERSION_MAJ != 2 || FABRIC_EDK_VERSION_MIN != 1
# error "This file needs to be rebuilt for the current EDK version!"
#endif

#include "global.h"

namespace Fabric { namespace EDK { namespace KL {

// KL struct 'RotationOrder'
// Defined at RotationOrder.kl:19:1

struct RotationOrder
{
  typedef RotationOrder &Result;
  typedef RotationOrder const &INParam;
  typedef RotationOrder &IOParam;
  typedef RotationOrder &OUTParam;
  
  SInt32 order;
};

inline void Traits<RotationOrder>::ConstructEmpty( RotationOrder &val )
{
  Traits< SInt32 >::ConstructEmpty( val.order );
}
inline void Traits<RotationOrder>::ConstructCopy( RotationOrder &lhs, RotationOrder const &rhs )
{
  Traits< SInt32 >::ConstructCopy( lhs.order, rhs.order );
}
inline void Traits<RotationOrder>::AssignCopy( RotationOrder &lhs, RotationOrder const &rhs )
{
  Traits< SInt32 >::AssignCopy( lhs.order, rhs.order );
}
inline void Traits<RotationOrder>::Destruct( RotationOrder &val )
{
  Traits< SInt32 >::Destruct( val.order );
}
}}}

#endif // __KL2EDK_AUTOGEN_RotationOrder__
